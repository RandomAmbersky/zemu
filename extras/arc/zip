#!/bin/bash

P7ZIP="$(which 7z 2> /dev/null)" || P7ZIP="$(which 7za 2> /dev/null)" || P7ZIP="$(which 7zr 2> /dev/null)"
UNZIP="$(which unzip 2> /dev/null)"

## 7z:
##
## l   List contents of archive
## e   Extract files from archive
## -so Write data to stdout
##
## unzip (unzip has known issues with encoding, so 7z is used by default is available):
##
## -v  List verbosely
## -qq Quieter mode
## -p  Extract files to pipe

list_files() {
    if [ "$P7ZIP" != "" ] ; then
        INSIDE="0"

        "$P7ZIP" l "$1" | while read DATE _ ATTS SIZE _ NAME ; do
            if [ "${DATE:0:4}" = "----" ] && [ "$INSIDE" = "1" ] ; then
                INSIDE="0"
                continue
            fi

            if [ "$INSIDE" = "1" ] ; then
                if [ "${ATTS:0:1}" = "D" ] ; then
                    echo "- $NAME"
                else
                    echo "$SIZE $NAME"
                fi
            fi

            if [ "${DATE:0:4}" = "----" ] && [ "$INSIDE" = "0" ] ; then
                INSIDE="1"
            fi
        done
    elif [ "$UNZIP" != "" ] ; then
        "$UNZIP" -v -qq "$1" | while read SIZE _ _ _ _ _ _ NAME ; do
            if [ "${NAME: -1}" = "/" ] ; then
                echo "- ${NAME%?}"
            else
                echo "$SIZE $NAME"
            fi
        done
    fi
}

extract_files() {
    if [ "$P7ZIP" != "" ] ; then
        "$P7ZIP" e -so "$1" "$2" > "$3"
    elif [ "$UNZIP" != "" ] ; then
        "$UNZIP" -p "$1" "$2" > "$3"
    fi
}

# arc/zip l <archive>
# arc/zip x <archive> <path> <destination>

case "$1" in
    l)
        list_files "$2"
        ;;

    x)
        extract_files "$2" "$3" "$4"
        ;;
esac
